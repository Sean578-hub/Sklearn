# -*- coding: utf-8 -*-
"""Sklearn LogisticRegretion Heart Disease

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13JldQdJEdG7LKFS_SgFy1PdKmsFtPO2i
"""

import sklearn
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import StandardScaler
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

url = "https://raw.githubusercontent.com/Sean578-hub/My-datasets/refs/heads/main/heart_cleveland_upload.csv"
Heart  = pd.read_csv(url, sep = ",")

x = Heart[["age", "sex", "cp", "trestbps", "chol", "fbs", "restecg", "thalach", "exang", "oldpeak", "slope", "ca", "thal"]]
y = Heart["condition"]

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.3, random_state = 42)
scaler = StandardScaler()
x_train_scaled = scaler.fit_transform(x_train)
x_test_scaled = scaler.transform(x_test)

model = LogisticRegression()

model.fit(x_train_scaled, y_train)

pred = model.predict(x_test_scaled)
pred

classification_report(y_test, pred)

confusion_matrix(y_test, pred)

accuracy_score(y_test, pred)

cm = confusion_matrix(y_test, pred)
sns.heatmap(cm, annot = True, fmt = "d", cmap = "Blues")
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.show()

person1 = [[58, 1, 2, 140, 211, 0, 1, 165, 0, 0.0, 2, 0, 2]]
person1_scaled = scaler.transform(person1)
pred_person1 = model.predict(person1_scaled)
pred_person1

