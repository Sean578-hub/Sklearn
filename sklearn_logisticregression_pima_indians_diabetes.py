# -*- coding: utf-8 -*-
"""Sklearn LogisticRegression Pima Indians Diabetes

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BI1LcuTg-tMrixwNMCUzUzEZzUTjvi9Y
"""

import sklearn
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import StandardScaler
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

url = "https://raw.githubusercontent.com/Sean578-hub/My-datasets/refs/heads/main/diabetes.csv"
Diabetes = pd.read_csv(url, sep = ",")

x = Diabetes[["Pregnancies", "Glucose", "BloodPressure", "SkinThickness", "Insulin", "BMI", "DiabetesPedigreeFunction", "Age"]]
y = Diabetes["Outcome"]

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.3, random_state = 42)
scaler = StandardScaler()
x_train_scaled = scaler.fit_transform(x_train)
x_test_scaled = scaler.fit_transform(x_test)

model = LogisticRegression()

model.fit(x_train_scaled, y_train)

pred = model.predict(x_test_scaled)
pred

classification_report(y_test, pred)

confusion_matrix(y_test, pred)

accuracy_score(y_test, pred)

plt.figure(figsize = (10,6))
plt.plot(y_test.values[:50], label = "Actual")
plt.xlabel("Index")
plt.ylabel("Diabities")
plt.grid(True)
plt.show()
plt.plot(pred[:50], label = "Predicted")
plt.legend()
plt.xlabel("Index")
plt.ylabel("Diabitise")
plt.grid(True)
plt.show()

cm = confusion_matrix(y_test, pred)
sns.heatmap(cm, annot = True, fmt = "d", cmap = "Blues")
plt.xlabel("Prediction")
plt.ylabel("Actual")
plt.show()

